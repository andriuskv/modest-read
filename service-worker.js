!function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/modest-read/",n(n.s=2)}([function(e,t,n){"use strict";try{self["workbox:precaching:5.1.4"]&&_()}catch(r){}},function(e,t,n){"use strict";try{self["workbox:core:5.1.4"]&&_()}catch(r){}},function(e,t,n){"use strict";n.r(t),n.d(t,"register",(function(){return x})),n.d(t,"unregister",(function(){return k}));n(0);const r=[],s={get:()=>r,add(e){r.push(...e)}};n(1);const o={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!==typeof registration?registration.scope:""},a=e=>[o.prefix,e,o.suffix].filter((e=>e&&e.length>0)).join("-"),c=e=>e||a(o.precache),i=(e,...t)=>{let n=e;return t.length>0&&(n+=" :: "+JSON.stringify(t)),n};class l extends Error{constructor(e,t){super(i(e,t)),this.name=e,this.details=t}}const h=new Set;const u=(e,t)=>e.filter((e=>t in e)),f=async({request:e,mode:t,plugins:n=[]})=>{const r=u(n,"cacheKeyWillBeUsed");let s=e;for(const o of r)s=await o.cacheKeyWillBeUsed.call(o,{mode:t,request:s}),"string"===typeof s&&(s=new Request(s));return s},d=async({cacheName:e,request:t,event:n,matchOptions:r,plugins:s=[]})=>{const o=await self.caches.open(e),a=await f({plugins:s,request:t,mode:"read"});let c=await o.match(a,r);for(const i of s)if("cachedResponseWillBeUsed"in i){const t=i.cachedResponseWillBeUsed;c=await t.call(i,{cacheName:e,event:n,matchOptions:r,cachedResponse:c,request:a})}return c},p=async({cacheName:e,request:t,response:n,event:r,plugins:s=[],matchOptions:o})=>{const a=await f({plugins:s,request:t,mode:"write"});if(!n)throw new l("cache-put-with-no-response",{url:(c=a.url,new URL(String(c),location.href).href.replace(new RegExp("^"+location.origin),""))});var c;const i=await(async({request:e,response:t,event:n,plugins:r=[]})=>{let s=t,o=!1;for(const a of r)if("cacheWillUpdate"in a){o=!0;const t=a.cacheWillUpdate;if(s=await t.call(a,{request:e,response:s,event:n}),!s)break}return o||(s=s&&200===s.status?s:void 0),s||null})({event:r,plugins:s,response:n,request:a});if(!i)return void 0;const p=await self.caches.open(e),w=u(s,"cacheDidUpdate"),g=w.length>0?await d({cacheName:e,matchOptions:o,request:a}):null;try{await p.put(a,i)}catch(y){throw"QuotaExceededError"===y.name&&await async function(){for(const e of h)await e()}(),y}for(const l of w)await l.cacheDidUpdate.call(l,{cacheName:e,event:r,oldResponse:g,newResponse:i,request:a})},w=async({request:e,fetchOptions:t,event:n,plugins:r=[]})=>{if("string"===typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const s=u(r,"fetchDidFail"),o=s.length>0?e.clone():null;try{for(const t of r)if("requestWillFetch"in t){const r=t.requestWillFetch,s=e.clone();e=await r.call(t,{request:s,event:n})}}catch(c){throw new l("plugin-error-request-will-fetch",{thrownError:c})}const a=e.clone();try{let s;s="navigate"===e.mode?await fetch(e):await fetch(e,t);for(const e of r)"fetchDidSucceed"in e&&(s=await e.fetchDidSucceed.call(e,{event:n,request:a,response:s}));return s}catch(i){0;for(const e of s)await e.fetchDidFail.call(e,{error:i,event:n,originalRequest:o.clone(),request:a.clone()});throw i}};let g;async function y(e,t){const n=e.clone(),r={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},s=t?t(r):r,o=function(){if(void 0===g){const t=new Response("");if("body"in t)try{new Response(t.body),g=!0}catch(e){g=!1}g=!1}return g}()?n.body:await n.blob();return new Response(o,s)}function v(e){if(!e)throw new l("add-to-cache-list-unexpected-type",{entry:e});if("string"===typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:n}=e;if(!n)throw new l("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const r=new URL(n,location.href),s=new URL(n,location.href);return r.searchParams.set("__WB_REVISION__",t),{cacheKey:r.href,url:s.href}}class m{constructor(e){this._cacheName=c(e),this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map}addToCacheList(e){const t=[];for(const n of e){"string"===typeof n?t.push(n):n&&void 0===n.revision&&t.push(n.url);const{cacheKey:e,url:r}=v(n),s="string"!==typeof n&&n.revision?"reload":"default";if(this._urlsToCacheKeys.has(r)&&this._urlsToCacheKeys.get(r)!==e)throw new l("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(r),secondEntry:e});if("string"!==typeof n&&n.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==n.integrity)throw new l("add-to-cache-list-conflicting-integrities",{url:r});this._cacheKeysToIntegrities.set(e,n.integrity)}if(this._urlsToCacheKeys.set(r,e),this._urlsToCacheModes.set(r,s),t.length>0){const e=`Workbox is precaching URLs without revision info: ${t.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const n=[],r=[],s=await self.caches.open(this._cacheName),o=await s.keys(),a=new Set(o.map((e=>e.url)));for(const[i,l]of this._urlsToCacheKeys)a.has(l)?r.push(i):n.push({cacheKey:l,url:i});const c=n.map((({cacheKey:n,url:r})=>{const s=this._cacheKeysToIntegrities.get(n),o=this._urlsToCacheModes.get(r);return this._addURLToCache({cacheKey:n,cacheMode:o,event:e,integrity:s,plugins:t,url:r})}));await Promise.all(c);return{updatedURLs:n.map((e=>e.url)),notUpdatedURLs:r}}async activate(){const e=await self.caches.open(this._cacheName),t=await e.keys(),n=new Set(this._urlsToCacheKeys.values()),r=[];for(const s of t)n.has(s.url)||(await e.delete(s),r.push(s.url));return{deletedURLs:r}}async _addURLToCache({cacheKey:e,url:t,cacheMode:n,event:r,plugins:s,integrity:o}){const a=new Request(t,{integrity:o,cache:n,credentials:"same-origin"});let c,i=await w({event:r,plugins:s,request:a});for(const l of s||[])"cacheWillUpdate"in l&&(c=l);if(!(c?await c.cacheWillUpdate({event:r,request:a,response:i}):i.status<400))throw new l("bad-precaching-response",{url:t,status:i.status});i.redirected&&(i=await y(i)),await p({event:r,plugins:s,response:i,request:e===t?a:new Request(e),cacheName:this._cacheName,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,n=this.getCacheKeyForURL(t);if(n){return(await self.caches.open(this._cacheName)).match(n)}}createHandler(e=!0){return async({request:t})=>{try{const e=await this.matchPrecache(t);if(e)return e;throw new l("missing-precache-entry",{cacheName:this._cacheName,url:t instanceof Request?t.url:t})}catch(n){if(e)return fetch(t);throw n}}}createHandlerBoundToURL(e,t=!0){if(!this.getCacheKeyForURL(e))throw new l("non-precached-url",{url:e});const n=this.createHandler(t),r=new Request(e);return()=>n({request:r})}}let R;const U=()=>(R||(R=new m),R);const _=(e,t)=>{const n=U().getURLsToCacheKeys();for(const r of function*(e,{ignoreURLParametersMatching:t,directoryIndex:n,cleanURLs:r,urlManipulation:s}={}){const o=new URL(e,location.href);o.hash="",yield o.href;const a=function(e,t=[]){for(const n of[...e.searchParams.keys()])t.some((e=>e.test(n)))&&e.searchParams.delete(n);return e}(o,t);if(yield a.href,n&&a.pathname.endsWith("/")){const e=new URL(a.href);e.pathname+=n,yield e.href}if(r){const e=new URL(a.href);e.pathname+=".html",yield e.href}if(s){const e=s({url:o});for(const t of e)yield t.href}}(e,t)){const e=n.get(r);if(e)return e}};let L=!1;function b(e){L||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:n=!0,urlManipulation:r}={})=>{const s=c();self.addEventListener("fetch",(o=>{const a=_(o.request.url,{cleanURLs:n,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:r});if(!a)return;let c=self.caches.open(s).then((e=>e.match(a))).then((e=>e||fetch(a)));o.respondWith(c)}))})(e),L=!0)}const T=e=>{const t=U(),n=s.get();e.waitUntil(t.install({event:e,plugins:n}).catch((e=>{throw e})))},q=e=>{const t=U();e.waitUntil(t.activate())};const K=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var C;function x(e){if("serviceWorker"in navigator){if(new URL("/modest-read",window.location.href).origin!==window.location.origin)return;window.addEventListener("load",(()=>{const t="/modest-read/service-worker.js";K?(!function(e,t){fetch(e,{headers:{"Service-Worker":"script"}}).then((n=>{const r=n.headers.get("content-type");404===n.status||null!=r&&-1===r.indexOf("javascript")?navigator.serviceWorker.ready.then((e=>{e.unregister().then((()=>{window.location.reload()}))})):W(e,t)})).catch((()=>{console.log("No internet connection found. App is running in offline mode.")}))}(t,e),navigator.serviceWorker.ready.then((()=>{console.log("This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA")}))):W(t,e)}))}}function W(e,t){navigator.serviceWorker.register(e).then((e=>{e.onupdatefound=()=>{const n=e.installing;null!=n&&(n.onstatechange=()=>{"installed"===n.state&&(navigator.serviceWorker.controller?(console.log("New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA."),t&&t.onUpdate&&t.onUpdate(e)):(console.log("Content is cached for offline use."),t&&t.onSuccess&&t.onSuccess(e)))})}})).catch((e=>{console.error("Error during service worker registration:",e)}))}function k(){"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((e=>{e.unregister()})).catch((e=>{console.error(e.message)}))}(function(e){U().addToCacheList(e),e.length>0&&(self.addEventListener("install",T),self.addEventListener("activate",q))})([{'revision':'3a24e52d2f95865920d7c6634431240a','url':'/modest-read/index.html'},{'revision':null,'url':'/modest-read/static/css/3.a34e2856.chunk.css'},{'revision':null,'url':'/modest-read/static/css/4.24bf1742.chunk.css'},{'revision':null,'url':'/modest-read/static/css/5.1ecfea68.chunk.css'},{'revision':null,'url':'/modest-read/static/css/6.2770a6ff.chunk.css'},{'revision':null,'url':'/modest-read/static/css/main.0a942541.chunk.css'},{'revision':null,'url':'/modest-read/static/js/0.f5ef723f.chunk.js'},{'revision':null,'url':'/modest-read/static/js/3.9a3f35b9.chunk.js'},{'revision':null,'url':'/modest-read/static/js/4.8cea962b.chunk.js'},{'revision':null,'url':'/modest-read/static/js/5.16ae1b34.chunk.js'},{'revision':null,'url':'/modest-read/static/js/6.b53c3c1d.chunk.js'},{'revision':null,'url':'/modest-read/static/js/7.b62f226d.chunk.js'},{'revision':null,'url':'/modest-read/static/js/main.e06498f5.chunk.js'},{'revision':null,'url':'/modest-read/static/js/pdf.worker.870c40da.worker.js'},{'revision':null,'url':'/modest-read/static/js/runtime-main.19335350.js'},{'revision':null,'url':'/modest-read/static/media/background-image.b12894ed.png'},{'revision':null,'url':'/modest-read/static/media/icon-text.8d796bce.svg'},{'revision':null,'url':'/modest-read/static/media/icon.4d9a1499.svg'},{'revision':null,'url':'/modest-read/static/media/text.200242c4.svg'}]),b(C)}]);